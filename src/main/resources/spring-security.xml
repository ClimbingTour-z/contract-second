<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 开发环境可以放置 <debug /> 配置，会输出详细Security处理日志，正式环境建议屏蔽 <debug /> 配置 -->
        <debug />
    <!-- 不需要拦截的url -->
    <http pattern="/static/**" security="none"/>
    <http pattern="/sys/denied.jsp" security="none"/>
    <http pattern="/user/login" security="none"/>
    <http pattern="/user/loginSys" security="none"/>

    <http auto-config="false" use-expressions="true" entry-point-ref="myAuthenticationEntryPoint" >

        <access-denied-handler error-page="/denied"/>

        <!--退出登录配置-->
        <logout logout-url="/user/login" logout-success-url="/j_spring_security_logout" invalidate-session="true" delete-cookies="JSESSIONID"/>

        <!-- 设置访问所有的 URL 都必须登录 -->
        <intercept-url pattern="/**" access="isAuthenticated()"/>

        <!-- 所有地址全开，无需验证，测试用 -->
         <!--<intercept-url pattern="/**" access="permitAll" />-->

        <!-- 会话管理 -->
        <session-management session-fixation-protection="none">
             <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
        </session-management>

        <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
    </http>

    <!-- 未登录的切入点 -->
    <beans:bean id="myAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:constructor-arg name="loginFormUrl" value="/user/login"></beans:constructor-arg>
    </beans:bean>

    <!-- 实现了UserDetailsService的Bean 用户拥有的权限：登录后取得用户所保有的权限信息
    //认证管理器   -->
    <authentication-manager alias="myAuthenticationManager">
        <authentication-provider user-service-ref="myUserDetailServiceImpl" />
    </authentication-manager>

</beans:beans>